"""Add LEGAL 3.0 fields to User and Document models

Revision ID: 707ef8588e61
Revises: 
Create Date: 2025-09-30 13:46:06.948245

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '707ef8588e61'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('document', sa.Column('firm_id', sa.Integer(), nullable=True))
    op.add_column('document', sa.Column('risk_score', sa.Float(), nullable=True))
    op.add_column('document', sa.Column('risk_level', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True))
    op.add_column('document', sa.Column('has_high_risk_clauses', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('document', sa.Column('precedent_count', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('document', sa.Column('relevant_cases_analyzed', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('document', sa.Column('last_risk_analysis', sa.DateTime(), nullable=True))
    op.add_column('document', sa.Column('last_precedent_search', sa.DateTime(), nullable=True))
    op.add_column('document', sa.Column('analysis_completeness', sa.Float(), nullable=True))
    op.add_column('document', sa.Column('practice_area', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('document', sa.Column('contract_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True))
    op.add_column('document', sa.Column('parties_involved', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('document', sa.Column('jurisdiction', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True))
    op.add_column('document', sa.Column('governing_law', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True))
    op.add_column('document', sa.Column('contract_value', sa.Float(), nullable=True))
    op.add_column('document', sa.Column('estimated_exposure', sa.Float(), nullable=True))
    op.add_column('document', sa.Column('requires_attorney_review', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('document', sa.Column('attorney_reviewed', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('document', sa.Column('attorney_review_date', sa.DateTime(), nullable=True))
    op.add_column('document', sa.Column('attorney_id', sa.Integer(), nullable=True))
    op.add_column('document', sa.Column('clause_extraction_complete', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('document', sa.Column('risk_analysis_complete', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('document', sa.Column('precedent_research_complete', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('document', sa.Column('predictions_generated', sa.Boolean(), nullable=False, server_default='false'))
    op.create_index(op.f('ix_document_firm_id'), 'document', ['firm_id'], unique=False)
    op.create_index(op.f('ix_document_has_high_risk_clauses'), 'document', ['has_high_risk_clauses'], unique=False)
    op.create_index(op.f('ix_document_practice_area'), 'document', ['practice_area'], unique=False)
    op.create_index(op.f('ix_document_risk_score'), 'document', ['risk_score'], unique=False)
    op.create_foreign_key(None, 'document', 'firm', ['firm_id'], ['id'])
    op.add_column('user', sa.Column('firm_id', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('permissions', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('practice_areas', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('bar_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('user', sa.Column('bar_state', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('user', sa.Column('bar_admission_date', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('specializations', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('documents_reviewed', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('user', sa.Column('risk_assessments_reviewed', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('user', sa.Column('cases_researched', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('user', sa.Column('predictions_validated', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('user', sa.Column('last_document_upload', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('last_risk_analysis', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('last_case_search', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('api_calls_count', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('user', sa.Column('can_access_analytics', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('user', sa.Column('can_validate_predictions', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('user', sa.Column('can_approve_contracts', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('user', sa.Column('can_manage_firm', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('user', sa.Column('email_notifications', sa.Boolean(), nullable=False, server_default='true'))
    op.add_column('user', sa.Column('high_risk_alerts', sa.Boolean(), nullable=False, server_default='true'))
    op.add_column('user', sa.Column('case_update_alerts', sa.Boolean(), nullable=False, server_default='true'))
    op.create_index(op.f('ix_user_firm_id'), 'user', ['firm_id'], unique=False)
    op.create_foreign_key(None, 'user', 'firm', ['firm_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_index(op.f('ix_user_firm_id'), table_name='user')
    op.drop_column('user', 'case_update_alerts')
    op.drop_column('user', 'high_risk_alerts')
    op.drop_column('user', 'email_notifications')
    op.drop_column('user', 'can_manage_firm')
    op.drop_column('user', 'can_approve_contracts')
    op.drop_column('user', 'can_validate_predictions')
    op.drop_column('user', 'can_access_analytics')
    op.drop_column('user', 'api_calls_count')
    op.drop_column('user', 'last_case_search')
    op.drop_column('user', 'last_risk_analysis')
    op.drop_column('user', 'last_document_upload')
    op.drop_column('user', 'predictions_validated')
    op.drop_column('user', 'cases_researched')
    op.drop_column('user', 'risk_assessments_reviewed')
    op.drop_column('user', 'documents_reviewed')
    op.drop_column('user', 'specializations')
    op.drop_column('user', 'bar_admission_date')
    op.drop_column('user', 'bar_state')
    op.drop_column('user', 'bar_number')
    op.drop_column('user', 'practice_areas')
    op.drop_column('user', 'permissions')
    op.drop_column('user', 'firm_id')
    op.drop_constraint(None, 'document', type_='foreignkey')
    op.drop_index(op.f('ix_document_risk_score'), table_name='document')
    op.drop_index(op.f('ix_document_practice_area'), table_name='document')
    op.drop_index(op.f('ix_document_has_high_risk_clauses'), table_name='document')
    op.drop_index(op.f('ix_document_firm_id'), table_name='document')
    op.drop_column('document', 'predictions_generated')
    op.drop_column('document', 'precedent_research_complete')
    op.drop_column('document', 'risk_analysis_complete')
    op.drop_column('document', 'clause_extraction_complete')
    op.drop_column('document', 'attorney_id')
    op.drop_column('document', 'attorney_review_date')
    op.drop_column('document', 'attorney_reviewed')
    op.drop_column('document', 'requires_attorney_review')
    op.drop_column('document', 'estimated_exposure')
    op.drop_column('document', 'contract_value')
    op.drop_column('document', 'governing_law')
    op.drop_column('document', 'jurisdiction')
    op.drop_column('document', 'parties_involved')
    op.drop_column('document', 'contract_type')
    op.drop_column('document', 'practice_area')
    op.drop_column('document', 'analysis_completeness')
    op.drop_column('document', 'last_precedent_search')
    op.drop_column('document', 'last_risk_analysis')
    op.drop_column('document', 'relevant_cases_analyzed')
    op.drop_column('document', 'precedent_count')
    op.drop_column('document', 'has_high_risk_clauses')
    op.drop_column('document', 'risk_level')
    op.drop_column('document', 'risk_score')
    op.drop_column('document', 'firm_id')
    # ### end Alembic commands ###
